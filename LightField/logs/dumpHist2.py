# coding: utf-8
import pylifi.LightFields as plf
imsave('smallestDoF.png',im)
ims = load('LFData.npy')
lf = plf.RLightField(ims)
lf.set_center(20,0)
lf.set_aperture(29,False)
lf.set_focus(-9.25)
im = lf.render() / 255
imshow(im)
gaussian = lambda x,c,s: exp(-(x-c)**2/(2*s**2))
gaussian(0,0,1)
gaussian(0,5,1)
lf.set_mask(gaussian(arange(31),20,4))
figure()
plot(lf.get_mask())
plot(lf.get_mask()[0])
clf()
plot(lf.get_mask()[0])
plot(gaussian(arange(30))
)
plot(gaussian(arange(30),20,4))
arange(30)
guassian(arange(30),20,4)
gaussian(arange(30),20,4)
plot(arange(30),gaussian(arange(30),20,5))
plot(arange(30),gaussian(arange(30),20,4))
clf()
plot(arange(30),gaussian(arange(30),20,4))
plot(arange(0,30,.01),gaussian(arange(0,30,.01),20,4))
gaussian(15,20,4)
gaussian(15.0,20,4)
gaussian(15.00,20,4)
gaussian(15.0,20.0,4)
gaussian(15.0,20.0,4.0)
plot(arange(30),gaussian(arange(30,dtype=float32),20,4))
clf()
plot(arange(30),gaussian(arange(30,dtype=float32),20,4))
lf.set_mask(gaussian(arange(31,dtype=float32),20,4))
plot(lf.get_mask())
plot(lf.get_mask()[0])
clf()
im = lf.render() / 255
imshow(im)
figure()
imshow(abs(fft.fftshift(fft.fft2(im))))
imshow(abs(fft.fftshift(fft.fft2(im[0]))))
imshow(abs(fft.fftshift(fft.fft2(im[:,:,0]))))
imshow(abs(fft.fftshift(fft.fft2(im[:,:,1]))))
imshow(abs(fft.fftshift(fft.fft2(im[:,:,2]))))
clf()
imshow(abs(fft.fftshift(fft.fft2(im))))
img = gray(im)
import cv2
img = cv2.cvtColor(im, cv2.COLOR_RGB2GRAY)
imshow(im)
imshow(img)
imshow(abs(fft.fftshift(fft.fft2(img))))
colorbar()
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=40000)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=4000)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=400)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=100)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=1)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=4)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=5)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=7)
imshow(abs(fft.fftshift(fft.fft2(img))),vmax=20)
lf.set_aperture(29,False)
lf.get_mask()
im2 = lf.render() / 255
im2g = cv2.cvtColor(i2m, cv2.COLOR_RGB2GRAY)
im2g = cv2.cvtColor(im2, cv2.COLOR_RGB2GRAY)
figure()
imshow(abs(fft.fftshift(fft.fft2(im2g))),vmax=20)
lf.get_params
lf.get_params()
lf.acx
mask = gaussian(arange(31,dtype=float32),20,8
)
lf.set_mask(mask)
im3 = lf.render() / 255
im3g = cv2.cvtColor(im3, cv2.COLOR_RGB2GRAY)
figure()
imshow(abs(fft.fftshift(fft.fft2(im3g))),vmax=20)
mask = gaussian(arange(31,dtype=float32),20,10)
figure()
plot(mask)
mask = gaussian(arange(31,dtype=float32),25,4)
clf()
plot(mask)
mask = gaussian(arange(31,dtype=float32),28,3)
mask += gaussian(arange(31,dtype=float32),12,3)
plot(mask)
lf.set_mask(mask)
mask.max()
im4 = lf.render() / 255
im4g = cv2.cvtColor(im4, cv2.COLOR_RGB2GRAY)
figure()
imshow(im4g)
figure()
imshow(abs(fft.fftshift(fft.fft2(im4g))),vmax=20)
